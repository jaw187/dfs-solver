{"ast":null,"code":"var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs2/core-js/object/define-properties\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _defineProperty = require(\"@babel/runtime-corejs2/helpers/defineProperty\");\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _classCallCheck = require(\"@babel/runtime-corejs2/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime-corejs2/helpers/createClass\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar OwnershipWatcher =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function OwnershipWatcher(_ref) {\n    var players = _ref.players,\n        n = _ref.n,\n        stack = _ref.stack,\n        lineupStrings = _ref.lineupStrings;\n\n    _classCallCheck(this, OwnershipWatcher);\n\n    var pool = this.pool = players;\n    var lineupsAllowed = {};\n\n    _Object$keys(pool).forEach(function (player) {\n      var count = pool[player].ownership / 100 * n;\n      lineupsAllowed[player] = count >= 1 ? lineupsAllowed : 1;\n    });\n\n    this.lineupsAllowed = _objectSpread({}, lineupsAllowed);\n    this.originalLineupsAllowed = _objectSpread({}, lineupsAllowed);\n    this.stack = stack.map(function (player) {\n      return player.draftableId;\n    });\n    this.lineupStrings = lineupStrings;\n  }\n\n  _createClass(OwnershipWatcher, [{\n    key: \"update\",\n    value: function update(players) {\n      var _this = this;\n\n      var lineupsAllowed = this.lineupsAllowed,\n          lineupStrings = this.lineupStrings;\n      var lineupString = players.sort(function (a, b) {\n        return a > b;\n      }).join('');\n      lineupStrings.push(lineupString);\n      players.forEach(function (player) {\n        --lineupsAllowed[player]; // Remove players from pool\n\n        if (lineupsAllowed[player] < 1 && !_this.stack.includes(Number(player))) {\n          delete _this.pool[player];\n        }\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(players) {\n      var _this2 = this;\n\n      var lineupsAllowed = this.lineupsAllowed,\n          lineupStrings = this.lineupStrings;\n      var lineupString = players.sort(function (a, b) {\n        return a > b;\n      }).join('');\n\n      if (lineupStrings.includes(lineupString)) {\n        return false;\n      }\n\n      var ineligiblePlayers = players.filter(function (player) {\n        if (lineupsAllowed[player] < 1) {\n          if (_this2.stack.includes(Number(player))) {\n            return false;\n          }\n\n          return true;\n        }\n\n        return false;\n      });\n      return ineligiblePlayers.length === 0;\n    }\n  }]);\n\n  return OwnershipWatcher;\n}();\n\nmodule.exports = OwnershipWatcher;","map":{"version":3,"sources":["/Users/jwesto1/Code/jaw187/dfs-solver/solver/ownership.js"],"names":["OwnershipWatcher","players","n","stack","lineupStrings","pool","lineupsAllowed","forEach","player","count","ownership","originalLineupsAllowed","map","draftableId","lineupString","sort","a","b","join","push","includes","Number","ineligiblePlayers","filter","length","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAAMA,gB;;;;;AACJ,kCAAmD;AAAA,QAApCC,OAAoC,QAApCA,OAAoC;AAAA,QAA3BC,CAA2B,QAA3BA,CAA2B;AAAA,QAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,QAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA;;AACjD,QAAMC,IAAI,GAAG,KAAKA,IAAL,GAAYJ,OAAzB;AAEA,QAAMK,cAAc,GAAG,EAAvB;;AACA,iBAAYD,IAAZ,EAAkBE,OAAlB,CAA0B,UAACC,MAAD,EAAY;AACpC,UAAMC,KAAK,GAAIJ,IAAI,CAACG,MAAD,CAAJ,CAAaE,SAAb,GAAuB,GAAxB,GAA+BR,CAA7C;AACAI,MAAAA,cAAc,CAACE,MAAD,CAAd,GAAyBC,KAAK,IAAI,CAAT,GAAaH,cAAb,GAA8B,CAAvD;AACD,KAHD;;AAKA,SAAKA,cAAL,qBAA2BA,cAA3B;AACA,SAAKK,sBAAL,qBAAmCL,cAAnC;AACA,SAAKH,KAAL,GAAaA,KAAK,CAACS,GAAN,CAAU,UAACJ,MAAD;AAAA,aAAYA,MAAM,CAACK,WAAnB;AAAA,KAAV,CAAb;AACA,SAAKT,aAAL,GAAqBA,aAArB;AACD;;;;2BAEMH,O,EAAS;AAAA;;AAAA,UACNK,cADM,GAC4B,IAD5B,CACNA,cADM;AAAA,UACUF,aADV,GAC4B,IAD5B,CACUA,aADV;AAGd,UAAMU,YAAY,GAAGb,OAAO,CAACc,IAAR,CAAa,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,GAAGC,CAAd;AAAA,OAAb,EAA8BC,IAA9B,CAAmC,EAAnC,CAArB;AACAd,MAAAA,aAAa,CAACe,IAAd,CAAmBL,YAAnB;AAEAb,MAAAA,OAAO,CAACM,OAAR,CAAgB,UAACC,MAAD,EAAY;AAC1B,UAAEF,cAAc,CAACE,MAAD,CAAhB,CAD0B,CAG1B;;AACA,YAAIF,cAAc,CAACE,MAAD,CAAd,GAAyB,CAAzB,IAA8B,CAAE,KAAI,CAACL,KAAL,CAAWiB,QAAX,CAAoBC,MAAM,CAACb,MAAD,CAA1B,CAApC,EAA0E;AACxE,iBAAO,KAAI,CAACH,IAAL,CAAUG,MAAV,CAAP;AACD;AACF,OAPD;AAQD;;;6BAEQP,O,EAAS;AAAA;;AAAA,UACRK,cADQ,GAC0B,IAD1B,CACRA,cADQ;AAAA,UACQF,aADR,GAC0B,IAD1B,CACQA,aADR;AAEhB,UAAMU,YAAY,GAAGb,OAAO,CAACc,IAAR,CAAa,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,GAAGC,CAAd;AAAA,OAAb,EAA8BC,IAA9B,CAAmC,EAAnC,CAArB;;AAEA,UAAId,aAAa,CAACgB,QAAd,CAAuBN,YAAvB,CAAJ,EAA0C;AACxC,eAAO,KAAP;AACD;;AAED,UAAMQ,iBAAiB,GAAGrB,OAAO,CAACsB,MAAR,CAAe,UAACf,MAAD,EAAY;AACnD,YAAIF,cAAc,CAACE,MAAD,CAAd,GAAyB,CAA7B,EAAgC;AAC9B,cAAI,MAAI,CAACL,KAAL,CAAWiB,QAAX,CAAoBC,MAAM,CAACb,MAAD,CAA1B,CAAJ,EAAyC;AACvC,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;;AAED,eAAO,KAAP;AACD,OATyB,CAA1B;AAWA,aAAOc,iBAAiB,CAACE,MAAlB,KAA6B,CAApC;AACD;;;;;;AAGHC,MAAM,CAACC,OAAP,GAAiB1B,gBAAjB","sourcesContent":["class OwnershipWatcher {\n  constructor ({ players, n, stack, lineupStrings }) {\n    const pool = this.pool = players;\n\n    const lineupsAllowed = {};\n    Object.keys(pool).forEach((player) => {\n      const count = (pool[player].ownership/100) * n;\n      lineupsAllowed[player] = count >= 1 ? lineupsAllowed : 1;\n    });\n\n    this.lineupsAllowed = { ...lineupsAllowed };\n    this.originalLineupsAllowed = { ...lineupsAllowed };\n    this.stack = stack.map((player) => player.draftableId);\n    this.lineupStrings = lineupStrings;\n  }\n\n  update(players) {\n    const { lineupsAllowed, lineupStrings } = this;\n\n    const lineupString = players.sort((a, b) => a > b).join('');\n    lineupStrings.push(lineupString);\n\n    players.forEach((player) => {\n      --lineupsAllowed[player];\n\n      // Remove players from pool\n      if (lineupsAllowed[player] < 1 && !(this.stack.includes(Number(player)))) {\n        delete this.pool[player];\n      }\n    });\n  }\n\n  validate(players) {\n    const { lineupsAllowed, lineupStrings } = this;\n    const lineupString = players.sort((a, b) => a > b).join('');\n\n    if (lineupStrings.includes(lineupString)) {\n      return false;\n    }\n\n    const ineligiblePlayers = players.filter((player) => {\n      if (lineupsAllowed[player] < 1) {\n        if (this.stack.includes(Number(player))) {\n          return false;\n        }\n        return true;\n      }\n\n      return false;\n    });\n\n    return ineligiblePlayers.length === 0;\n  }\n}\n\nmodule.exports = OwnershipWatcher;\n"]},"metadata":{},"sourceType":"script"}