{"ast":null,"code":"var _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nmodule.exports = {\n  nfl: {\n    draftkings: {\n      classic: function classic(players) {\n        return function (solution) {\n          var points = solution.result;\n          var roster = {\n            positions: {\n              qb: [],\n              rb: [],\n              wr: [],\n              te: [],\n              dst: []\n            }\n          };\n\n          var resultPlayers = _Object$keys(solution).filter(function (key) {\n            var keysToRemove = ['feasible', 'result', 'bounded', 'isIntegral'];\n            return !keysToRemove.includes(key);\n          }); // Add players to positions their eligible for\n\n\n          var playersEligibleAtMoreThanOnePosition = [];\n          resultPlayers.forEach(function (playerId) {\n            var positions = 0;\n            var player = players[playerId];\n            player.id = playerId;\n\n            if (player.qb) {\n              ++positions;\n              roster.positions.qb.push(player);\n            }\n\n            if (player.dst) {\n              ++positions;\n              roster.positions.dst.push(player);\n            }\n\n            if (player.rb) {\n              ++positions;\n              roster.positions.rb.push(player);\n            }\n\n            if (player.wr) {\n              ++positions;\n              roster.positions.wr.push(player);\n            }\n\n            if (player.te) {\n              ++positions;\n              roster.positions.te.push(player);\n            }\n\n            var playsMultiplePositions = positions > 1;\n\n            if (playsMultiplePositions) {\n              player.multiplePositions = true;\n              playersEligibleAtMoreThanOnePosition.push(player);\n            }\n          }); // Determine expected position of player.\n\n          playersEligibleAtMoreThanOnePosition.forEach(function (player) {\n            var removePlayer = function removePlayer(positionPlayer) {\n              return !(player.id === positionPlayer.id);\n            };\n\n            if (player.qb && roster.positions.qb.length === 1) {\n              roster.positions.rb = roster.positions.rb.filter(removePlayer);\n              roster.positions.wr = roster.positions.wr.filter(removePlayer);\n              roster.positions.te = roster.positions.te.filter(removePlayer);\n              roster.positions.dst = roster.positions.dst.filter(removePlayer);\n              return null;\n            }\n\n            if (player.rb && roster.positions.rb.length === 2) {\n              roster.positions.qb = roster.positions.qb.filter(removePlayer);\n              roster.positions.wr = roster.positions.wr.filter(removePlayer);\n              roster.positions.te = roster.positions.te.filter(removePlayer);\n              roster.positions.dst = roster.positions.dst.filter(removePlayer);\n              return null;\n            }\n\n            if (player.wr && roster.positions.wr.length === 2) {\n              roster.positions.qb = roster.positions.qb.filter(removePlayer);\n              roster.positions.rb = roster.positions.rb.filter(removePlayer);\n              roster.positions.te = roster.positions.te.filter(removePlayer);\n              roster.positions.dst = roster.positions.dst.filter(removePlayer);\n              return null;\n            }\n\n            if (player.te && roster.positions.te.length === 1) {\n              roster.positions.qb = roster.positions.qb.filter(removePlayer);\n              roster.positions.rb = roster.positions.rb.filter(removePlayer);\n              roster.positions.wr = roster.positions.wr.filter(removePlayer);\n              roster.positions.dst = roster.positions.dst.filter(removePlayer);\n              return null;\n            }\n\n            if (player.dst && roster.positions.dst.length === 1) {\n              roster.positions.qb = roster.positions.qb.filter(removePlayer);\n              roster.positions.rb = roster.positions.rb.filter(removePlayer);\n              roster.positions.wr = roster.positions.wr.filter(removePlayer);\n              roster.positions.te = roster.positions.te.filter(removePlayer);\n            }\n          }); // Sort by start time\n          // Attempting to account for late swap\n\n          var sort = function sort(a, b) {\n            return a.startTime - b.startTime;\n          };\n\n          roster.positions.rb.sort(sort);\n          roster.positions.wr.sort(sort);\n          roster.positions.te.sort(sort); //construct lineup\n\n          var lineup = {\n            qb: roster.positions.qb[0],\n            rbs: roster.positions.rb.slice(0, 2),\n            wrs: roster.positions.wr.slice(0, 3),\n            te: roster.positions.te[0],\n            flex: roster.positions.rb[2] || roster.positions.wr[3] || roster.positions.te[1],\n            dst: roster.positions.dst[0]\n          };\n          return {\n            points: points,\n            lineup: lineup,\n            players: resultPlayers\n          };\n        };\n      }\n    }\n  },\n  golf: {\n    draftkings: {\n      classic: function classic(players) {\n        return function (solution) {\n          var points = solution.result;\n          var roster = {\n            positions: {\n              g: []\n            }\n          };\n\n          var resultPlayers = _Object$keys(solution).filter(function (key) {\n            var keysToRemove = ['feasible', 'result', 'bounded', 'isIntegral'];\n            return !keysToRemove.includes(key);\n          }); // Add players to positions their eligible for\n\n\n          var playersEligibleAtMoreThanOnePosition = [];\n          resultPlayers.forEach(function (playerId) {\n            var player = players[playerId];\n            player.id = playerId;\n            roster.positions.g.push(player);\n          }); // Sort by start time\n          // Attempting to account for late swap\n\n          var sort = function sort(a, b) {\n            return a.startTime - b.startTime;\n          };\n\n          roster.positions.g.sort(sort); //construct lineup\n\n          var lineup = {\n            g: roster.positions.g\n          };\n          return {\n            points: points,\n            lineup: lineup,\n            players: resultPlayers\n          };\n        };\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/jwesto1/Code/jaw187/dfs-solver/solver/formaters.js"],"names":["module","exports","nfl","draftkings","classic","players","solution","points","result","roster","positions","qb","rb","wr","te","dst","resultPlayers","filter","key","keysToRemove","includes","playersEligibleAtMoreThanOnePosition","forEach","playerId","player","id","push","playsMultiplePositions","multiplePositions","removePlayer","positionPlayer","length","sort","a","b","startTime","lineup","rbs","slice","wrs","flex","golf","g"],"mappings":"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","sourcesContent":["module.exports = {\n  nfl: {\n    draftkings: {\n      classic: (players) => {\n        return (solution) => {\n\n          const points = solution.result;\n          const roster = {\n            positions: {\n              qb: [],\n              rb: [],\n              wr: [],\n              te: [],\n              dst: []\n            }\n          };\n\n          const resultPlayers = Object.keys(solution).filter((key) => {\n            const keysToRemove = ['feasible', 'result', 'bounded', 'isIntegral']\n            return !keysToRemove.includes(key);\n          });\n\n          // Add players to positions their eligible for\n          const playersEligibleAtMoreThanOnePosition = [];\n          resultPlayers.forEach((playerId) => {\n\n            let positions = 0;\n            const player = players[playerId];\n            player.id = playerId;\n\n            if (player.qb) {\n              ++positions;\n              roster.positions.qb.push(player);\n            }\n\n            if (player.dst) {\n              ++positions;\n              roster.positions.dst.push(player);\n            }\n\n            if (player.rb) {\n              ++positions;\n              roster.positions.rb.push(player)\n            }\n\n            if (player.wr) {\n              ++positions;\n              roster.positions.wr.push(player)\n            }\n\n            if (player.te) {\n              ++positions;\n              roster.positions.te.push(player)\n            }\n\n            const playsMultiplePositions = positions > 1;\n            if (playsMultiplePositions) {\n              player.multiplePositions = true;\n              playersEligibleAtMoreThanOnePosition.push(player);\n            }\n          });\n\n          // Determine expected position of player.\n          playersEligibleAtMoreThanOnePosition.forEach((player) => {\n\n            const removePlayer = (positionPlayer) => !(player.id === positionPlayer.id);\n            if (player.qb && roster.positions.qb.length === 1) {\n              roster.positions.rb = roster.positions.rb.filter(removePlayer);\n              roster.positions.wr = roster.positions.wr.filter(removePlayer);\n              roster.positions.te = roster.positions.te.filter(removePlayer);\n              roster.positions.dst = roster.positions.dst.filter(removePlayer);\n\n              return null;\n            }\n\n            if (player.rb && roster.positions.rb.length === 2) {\n              roster.positions.qb = roster.positions.qb.filter(removePlayer);\n              roster.positions.wr = roster.positions.wr.filter(removePlayer);\n              roster.positions.te = roster.positions.te.filter(removePlayer);\n              roster.positions.dst = roster.positions.dst.filter(removePlayer);\n\n              return null;\n            }\n\n            if (player.wr && roster.positions.wr.length === 2) {\n              roster.positions.qb = roster.positions.qb.filter(removePlayer);\n              roster.positions.rb = roster.positions.rb.filter(removePlayer);\n              roster.positions.te = roster.positions.te.filter(removePlayer);\n              roster.positions.dst = roster.positions.dst.filter(removePlayer);\n\n              return null;\n            }\n\n            if (player.te && roster.positions.te.length === 1) {\n              roster.positions.qb = roster.positions.qb.filter(removePlayer);\n              roster.positions.rb = roster.positions.rb.filter(removePlayer);\n              roster.positions.wr = roster.positions.wr.filter(removePlayer);\n              roster.positions.dst = roster.positions.dst.filter(removePlayer);\n\n              return null;\n            }\n\n            if (player.dst && roster.positions.dst.length === 1) {\n              roster.positions.qb = roster.positions.qb.filter(removePlayer);\n              roster.positions.rb = roster.positions.rb.filter(removePlayer);\n              roster.positions.wr = roster.positions.wr.filter(removePlayer);\n              roster.positions.te = roster.positions.te.filter(removePlayer);\n            }\n          });\n\n          // Sort by start time\n          // Attempting to account for late swap\n          const sort = (a, b) => a.startTime - b.startTime;\n          roster.positions.rb.sort(sort);\n          roster.positions.wr.sort(sort);\n          roster.positions.te.sort(sort);\n\n          //construct lineup\n          const lineup = {\n            qb: roster.positions.qb[0],\n            rbs: roster.positions.rb.slice(0,2),\n            wrs: roster.positions.wr.slice(0,3),\n            te: roster.positions.te[0],\n            flex: roster.positions.rb[2] || roster.positions.wr[3] || roster.positions.te[1],\n            dst: roster.positions.dst[0]\n          };\n\n          return {\n            points,\n            lineup,\n            players: resultPlayers\n          }\n        }\n      }\n    }\n  },\n  golf: {\n    draftkings: {\n      classic: (players) => {\n        return (solution) => {\n\n          const points = solution.result;\n          const roster = {\n            positions: {\n              g: []\n            }\n          };\n\n          const resultPlayers = Object.keys(solution).filter((key) => {\n            const keysToRemove = ['feasible', 'result', 'bounded', 'isIntegral']\n            return !keysToRemove.includes(key);\n          });\n\n          // Add players to positions their eligible for\n          const playersEligibleAtMoreThanOnePosition = [];\n          resultPlayers.forEach((playerId) => {\n\n            const player = players[playerId];\n            player.id = playerId;\n            roster.positions.g.push(player);\n          });\n\n          // Sort by start time\n          // Attempting to account for late swap\n          const sort = (a, b) => a.startTime - b.startTime;\n          roster.positions.g.sort(sort);\n\n          //construct lineup\n          const lineup = {\n            g: roster.positions.g\n          };\n\n          return {\n            points,\n            lineup,\n            players: resultPlayers\n          }\n        }\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}