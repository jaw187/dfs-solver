{"ast":null,"code":"var _jsxFileName = \"/Users/jwesto1/Code/jaw187/dfs-solver/components/stackbuilder.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Card from \"./card\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport Stacks from \"./stacks\";\nimport { log } from './utils';\n\nconst getState = () => {\n  const dispatch = useDispatch();\n  const {\n    pool,\n    stack,\n    slates,\n    selectedSlate,\n    view\n  } = useSelector(state => state, shallowEqual);\n\n  const clearStack = () => dispatch({\n    type: \"CLEAR_STACK\"\n  });\n\n  const addStack = () => dispatch({\n    type: \"ADD_STACK\",\n    payload: stack\n  });\n\n  const removeStack = i => dispatch({\n    type: \"REMOVE_STACK\",\n    payload: i\n  });\n\n  const addPlayerToStack = player => dispatch({\n    type: \"ADD_PLAYER_TO_STACK\",\n    payload: player\n  });\n\n  const removePlayerFromStack = player => dispatch({\n    type: \"REMOVE_PLAYER_FROM_STACK\",\n    payload: player\n  });\n\n  return {\n    pool,\n    stack,\n    slate: slates[selectedSlate],\n    clearStack,\n    addStack,\n    removeStack,\n    addPlayerToStack,\n    removePlayerFromStack,\n    view\n  };\n};\n\nconst StackBuilder = () => {\n  const {\n    pool,\n    stack,\n    slate,\n    clearStack,\n    addStack,\n    addPlayerToStack,\n    removePlayerFromStack,\n    view\n  } = getState();\n\n  if (view !== 'stackbuilder') {\n    return null;\n  }\n\n  if (!pool.length) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Pick players for pool first.\");\n  }\n\n  const togglePlayer = player => {\n    return () => {\n      const inStack = stack && !!stack.find(stackPlayer => player.playerId === stackPlayer.playerId);\n\n      if (inStack) {\n        return removePlayerFromStack(player);\n      }\n\n      addPlayerToStack(player);\n    };\n  };\n\n  const checkboxes = [];\n\n  const clear = () => {\n    checkboxes.forEach(checkbox => {\n      checkbox.current.checked = false;\n    });\n    clearStack();\n  };\n\n  const add = () => {\n    log('stack add');\n    addStack();\n    clear();\n  };\n\n  const componentContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: 16\n  };\n  const cardContainer = {\n    display: 'flex',\n    flexDirection: 'row'\n  };\n  return __jsx(\"div\", {\n    style: componentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    style: {\n      marginTop: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Stack Builder\"), __jsx(\"div\", {\n    style: cardContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      minWidth: 240\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Players\"), pool && pool.map((player, i) => {\n    const ref = React.createRef();\n    checkboxes.push(ref);\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      ref: ref,\n      type: \"checkbox\",\n      onClick: togglePlayer(player),\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), player.displayName, \" - $\", player.salary);\n  })), __jsx(\"div\", {\n    style: {\n      paddingLeft: 16,\n      minWidth: 240\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Stack\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, stack && stack.map((player, i) => __jsx(\"li\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, player.displayName))), stack && stack.length > 1 && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: add,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Add\"), __jsx(\"button\", {\n    onClick: clear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Clear\")))))))), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Stacks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })));\n};\n\nexport default StackBuilder;","map":{"version":3,"sources":["/Users/jwesto1/Code/jaw187/dfs-solver/components/stackbuilder.js"],"names":["React","Card","useSelector","useDispatch","shallowEqual","Stacks","log","getState","dispatch","pool","stack","slates","selectedSlate","view","state","clearStack","type","addStack","payload","removeStack","i","addPlayerToStack","player","removePlayerFromStack","slate","StackBuilder","length","togglePlayer","inStack","find","stackPlayer","playerId","checkboxes","clear","forEach","checkbox","current","checked","add","componentContainer","display","flexDirection","padding","cardContainer","marginTop","minWidth","map","ref","createRef","push","displayName","salary","paddingLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"./card\"\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport Stacks from \"./stacks\";\nimport { log } from './utils';\n\nconst getState = () => {\n  const dispatch = useDispatch();\n\n  const { pool, stack, slates, selectedSlate, view } = useSelector(state => state, shallowEqual);\n\n  const clearStack = () => dispatch({ type: \"CLEAR_STACK\" });\n  const addStack = () => dispatch({ type: \"ADD_STACK\", payload: stack });\n  const removeStack = (i) => dispatch({ type: \"REMOVE_STACK\", payload: i });\n  const addPlayerToStack = (player) => dispatch({ type: \"ADD_PLAYER_TO_STACK\", payload: player});\n  const removePlayerFromStack = (player) => dispatch({ type: \"REMOVE_PLAYER_FROM_STACK\", payload: player });\n\n  return {\n    pool,\n    stack,\n    slate: slates[selectedSlate],\n    clearStack,\n    addStack,\n    removeStack,\n    addPlayerToStack,\n    removePlayerFromStack,\n    view\n  }\n}\n\nconst StackBuilder = () => {\n  const {\n    pool,\n    stack,\n    slate,\n    clearStack,\n    addStack,\n    addPlayerToStack,\n    removePlayerFromStack,\n    view\n  } = getState();\n\n  if (view !== 'stackbuilder') {\n    return null;\n  }\n\n  if (!pool.length) {\n    return (\n      <div>Pick players for pool first.</div>\n    )\n  }\n\n  const togglePlayer = (player) => {\n    return () => {\n      const inStack = stack && !!stack.find((stackPlayer) => player.playerId === stackPlayer.playerId)\n      if (inStack) {\n        return removePlayerFromStack(player);\n      }\n\n      addPlayerToStack(player);\n    };\n  };\n\n  const checkboxes = [];\n\n  const clear = () => {\n    checkboxes.forEach((checkbox) => {\n      checkbox.current.checked = false;\n    });\n    clearStack();\n  };\n\n  const add = () => {\n    log('stack add')\n    addStack();\n    clear();\n  };\n\n  const componentContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: 16\n  };\n\n  const cardContainer = {\n    display: 'flex',\n    flexDirection: 'row'\n  };\n\n  return (\n    <div style={componentContainer}>\n      <div>\n        <h2 style={{ marginTop: 0 }}>Stack Builder</h2>\n        <div style={cardContainer}>\n          <Card>\n            <div>\n              <div style={{\n                display: \"flex\",\n                flexDirection: \"row\"\n              }}>\n                <div style={{ minWidth: 240 }}>\n                  <h3>Players</h3>\n                    {\n                      pool && pool.map((player, i) => {\n                        const ref = React.createRef();\n                        checkboxes.push(ref);\n\n                        return (\n                          <div>\n                            <input ref={ref} type=\"checkbox\" onClick={togglePlayer(player)} key={i} />{player.displayName} - ${player.salary}\n                          </div>\n                        )\n                      })\n                    }\n                </div>\n                <div style={{ paddingLeft: 16, minWidth: 240 }}>\n                  <h3>Stack</h3>\n                  <ul>\n                    {\n                      stack && stack.map((player, i) => (\n                        <li key={i}>{player.displayName}</li>\n                      ))\n                    }\n                  </ul>\n                  {\n                    stack && stack.length > 1 && (\n                      <div>\n                        <button onClick={add}>Add</button>\n                        <button onClick={clear}>Clear</button>\n                      </div>\n                    )\n                  }\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n      <div>\n        <Stacks />\n      </div>\n    </div>\n  );\n};\n\nexport default StackBuilder;\n"]},"metadata":{},"sourceType":"module"}