{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Card from \"./card\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport Stacks from \"./stacks\";\nimport { log } from './utils';\n\nvar getState = function getState() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }, shallowEqual),\n      pool = _useSelector.pool,\n      stack = _useSelector.stack,\n      slates = _useSelector.slates,\n      selectedSlate = _useSelector.selectedSlate,\n      view = _useSelector.view;\n\n  var clearStack = function clearStack() {\n    return dispatch({\n      type: \"CLEAR_STACK\"\n    });\n  };\n\n  var addStack = function addStack() {\n    return dispatch({\n      type: \"ADD_STACK\",\n      payload: stack\n    });\n  };\n\n  var removeStack = function removeStack(i) {\n    return dispatch({\n      type: \"REMOVE_STACK\",\n      payload: i\n    });\n  };\n\n  var addPlayerToStack = function addPlayerToStack(player) {\n    return dispatch({\n      type: \"ADD_PLAYER_TO_STACK\",\n      payload: player\n    });\n  };\n\n  var removePlayerFromStack = function removePlayerFromStack(player) {\n    return dispatch({\n      type: \"REMOVE_PLAYER_FROM_STACK\",\n      payload: player\n    });\n  };\n\n  return {\n    pool: pool,\n    stack: stack,\n    slate: slates[selectedSlate],\n    clearStack: clearStack,\n    addStack: addStack,\n    removeStack: removeStack,\n    addPlayerToStack: addPlayerToStack,\n    removePlayerFromStack: removePlayerFromStack,\n    view: view\n  };\n};\n\nvar StackBuilder = function StackBuilder() {\n  var _getState = getState(),\n      pool = _getState.pool,\n      stack = _getState.stack,\n      slate = _getState.slate,\n      clearStack = _getState.clearStack,\n      addStack = _getState.addStack,\n      addPlayerToStack = _getState.addPlayerToStack,\n      removePlayerFromStack = _getState.removePlayerFromStack,\n      view = _getState.view;\n\n  if (view !== 'stackbuilder') {\n    return null;\n  }\n\n  if (!pool.length) {\n    return __jsx(\"div\", null, \"Pick players for pool first.\");\n  }\n\n  var togglePlayer = function togglePlayer(player) {\n    return function () {\n      var inStack = stack && !!stack.find(function (stackPlayer) {\n        return player.playerId === stackPlayer.playerId;\n      });\n\n      if (inStack) {\n        return removePlayerFromStack(player);\n      }\n\n      addPlayerToStack(player);\n    };\n  };\n\n  var checkboxes = [];\n\n  var clear = function clear() {\n    checkboxes.forEach(function (checkbox) {\n      checkbox.current.checked = false;\n    });\n    clearStack();\n  };\n\n  var add = function add() {\n    log('stack add');\n    addStack();\n    clear();\n  };\n\n  var componentContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: 16\n  };\n  var cardContainer = {\n    display: 'flex',\n    flexDirection: 'row'\n  };\n  return __jsx(\"div\", {\n    style: componentContainer\n  }, __jsx(\"div\", null, __jsx(\"h2\", {\n    style: {\n      marginTop: 0\n    }\n  }, \"Stack Builder\"), __jsx(\"div\", {\n    style: cardContainer\n  }, __jsx(Card, null, __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      minWidth: 240\n    }\n  }, __jsx(\"h3\", null, \"Players\"), pool && pool.map(function (player, i) {\n    var ref = React.createRef();\n    checkboxes.push(ref);\n    return __jsx(\"div\", null, __jsx(\"input\", {\n      ref: ref,\n      type: \"checkbox\",\n      onClick: togglePlayer(player),\n      key: i\n    }), player.displayName, \" - $\", player.salary);\n  })), __jsx(\"div\", {\n    style: {\n      paddingLeft: 16,\n      minWidth: 240\n    }\n  }, __jsx(\"h3\", null, \"Stack\"), __jsx(\"ul\", null, stack && stack.map(function (player, i) {\n    return __jsx(\"li\", {\n      key: i\n    }, player.displayName);\n  })), stack && stack.length > 1 && __jsx(\"div\", null, __jsx(\"button\", {\n    onClick: add\n  }, \"Add\"), __jsx(\"button\", {\n    onClick: clear\n  }, \"Clear\")))))))), __jsx(\"div\", null, __jsx(Stacks, null)));\n};\n\nexport default StackBuilder;","map":null,"metadata":{},"sourceType":"module"}