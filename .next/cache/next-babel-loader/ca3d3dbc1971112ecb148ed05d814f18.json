{"ast":null,"code":"var _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _classCallCheck = require(\"@babel/runtime-corejs2/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime-corejs2/helpers/createClass\");\n\nvar clone = require('lodash/cloneDeep');\n\nvar constraintList = {\n  nfl: {\n    draftkings: {\n      classic: {\n        pointz: {\n          max: 100000\n        },\n        salary: {\n          max: 50000\n        },\n        qb: {\n          min: 1,\n          max: 1\n        },\n        rb: {\n          min: 2,\n          max: 3\n        },\n        wr: {\n          min: 3,\n          max: 4\n        },\n        te: {\n          min: 1,\n          max: 2\n        },\n        dst: {\n          min: 1,\n          max: 1\n        },\n        player: {\n          equal: 9\n        }\n      }\n    }\n  },\n  golf: {\n    draftkings: {\n      classic: {\n        pointz: {\n          max: 100000\n        },\n        salary: {\n          max: 50000\n        },\n        g: {\n          equal: 6\n        }\n      }\n    }\n  }\n};\n\nvar Model =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Model(players, constraints) {\n    _classCallCheck(this, Model);\n\n    this.optimize = 'points';\n    this.opType = 'max';\n    this.constraints = constraints;\n    this.variables = players;\n    var ints = this.ints = {};\n\n    _Object$keys(players).forEach(function (player) {\n      // Limit results so player only shows up once in results.\n      // More players results in more complexity\n      players[player][player] = 1;\n      constraints[player] = {\n        max: 1\n      };\n      ints[player] = 1;\n    });\n  }\n\n  _createClass(Model, [{\n    key: \"removePlayer\",\n    value: function removePlayer(player) {\n      var constraints = this.constraints,\n          ints = this.ints;\n      delete constraints[player];\n      delete ints[player];\n    }\n  }]);\n\n  return Model;\n}();\n\nmodule.exports = {\n  nfl: {\n    draftkings: {\n      classic: function classic(players) {\n        return new Model(players, clone(constraintList.nfl.draftkings.classic));\n      }\n    }\n  },\n  golf: {\n    draftkings: {\n      classic: function classic(players) {\n        return new Model(players, clone(constraintList.golf.draftkings.classic));\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}