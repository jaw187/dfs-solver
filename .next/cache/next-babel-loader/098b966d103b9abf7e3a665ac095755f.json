{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Card from \"./card\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nvar getState = function getState() {\n  var dispatch = useDispatch();\n  var stacks = useSelector(function (state) {\n    return state.stacks;\n  }, shallowEqual);\n  var view = useSelector(function (state) {\n    return state.view;\n  });\n  var stackCounts = useSelector(function (state) {\n    return state.stackCounts;\n  });\n\n  var removeStack = function removeStack(i) {\n    return dispatch({\n      type: \"REMOVE_STACK\",\n      payload: i\n    });\n  };\n\n  var setStackN = function setStackN(i, n) {\n    dispatch({\n      type: \"SET_STACK_N\",\n      payload: {\n        i: i,\n        n: n\n      }\n    });\n  };\n\n  var moveStack = function moveStack(j, which) {\n    dispatch({\n      type: \"MOVE_STACK\",\n      payload: {\n        j: j,\n        which: which\n      }\n    });\n  };\n\n  return {\n    stacks: stacks,\n    removeStack: removeStack,\n    setStackN: setStackN,\n    view: view,\n    stackCounts: stackCounts,\n    moveStack: moveStack\n  };\n};\n\nvar Stacks = function Stacks() {\n  var _getState = getState(),\n      stacks = _getState.stacks,\n      removeStack = _getState.removeStack,\n      setStackN = _getState.setStackN,\n      view = _getState.view,\n      stackCounts = _getState.stackCounts,\n      moveStack = _getState.moveStack;\n\n  if (view !== 'stackbuilder') {\n    return null;\n  }\n\n  if (!stacks || stacks.length === 0) {\n    return null;\n  }\n\n  var remove = function remove(i) {\n    return function () {\n      removeStack(i);\n    };\n  };\n\n  var onChange = function onChange(i) {\n    return function (event) {\n      event.target.value = Number(event.target.value);\n      setStackN(i, event.target.value);\n    };\n  };\n\n  var cardContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: \"wrap\"\n  };\n  var marks = [{\n    value: 0\n  }, {\n    value: 5\n  }, {\n    value: 10\n  }, {\n    value: 15\n  }];\n\n  var handleSliderChange = function handleSliderChange(i) {\n    return function (event, newValue) {\n      setStackN(i, newValue);\n    };\n  };\n\n  var handleInputChange = function handleInputChange(i) {\n    return function (event) {\n      var newValue = event.target.value === '' ? '' : Number(event.target.value);\n      setStackN(i, newValue);\n    };\n  };\n\n  var handleBlur = function handleBlur(i) {\n    return function () {\n      if (stackCounts[i] < 0) {\n        setStackN(i, 1);\n      } else if (stackCounts[i] > 20) {\n        setStackN(i, 20);\n      }\n    };\n  };\n\n  var move = function move(j, which) {\n    return function () {\n      moveStack(j, which);\n    };\n  };\n\n  return __jsx(\"div\", null, __jsx(\"h2\", {\n    style: {\n      marginTop: 0\n    }\n  }, \"Stacks\"), __jsx(\"div\", {\n    style: cardContainer\n  }, stacks.map(function (stack, j) {\n    if (!stackCounts[j]) {\n      stackCounts[j] = 10;\n    }\n\n    return __jsx(Card, null, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        height: '100%'\n      },\n      key: j\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      }\n    }, __jsx(\"div\", {\n      onClick: move(j, 'left')\n    }, \"Move Left\"), __jsx(\"div\", {\n      onClick: move(j, 'right')\n    }, \"Move Right\")), __jsx(\"div\", {\n      style: {\n        display: 'flex'\n      }\n    }, __jsx(\"ul\", null, stack.map(function (player, i) {\n      return __jsx(\"li\", {\n        key: i\n      }, player.displayName);\n    }))), __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      }\n    }, __jsx(\"div\", {\n      style: {\n        minWidth: 240,\n        marginRight: 16\n      }\n    }, \"No. of lineups\", __jsx(Slider, {\n      defaultValue: stackCounts[j],\n      value: stackCounts[j],\n      step: 1,\n      marks: marks,\n      min: 1,\n      max: 20,\n      onChange: handleSliderChange(j),\n      \"aria-labelledby\": \"input-slider\"\n    })), __jsx(\"div\", {\n      style: {\n        marginTop: 4\n      }\n    }, __jsx(Input, {\n      value: stackCounts[j],\n      margin: \"dense\",\n      onChange: handleInputChange(j),\n      onBlur: handleBlur(j),\n      inputProps: {\n        step: 1,\n        min: 1,\n        max: 20,\n        type: 'number',\n        'aria-labelledby': 'input-slider'\n      }\n    }))), __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      }\n    }), __jsx(\"div\", {\n      style: {\n        display: 'flex'\n      }\n    }, __jsx(Button, {\n      onClick: remove(j),\n      variant: \"contained\",\n      color: \"secondary\"\n    }, \"Delete\"))));\n  })));\n};\n\nexport default Stacks;","map":null,"metadata":{},"sourceType":"module"}