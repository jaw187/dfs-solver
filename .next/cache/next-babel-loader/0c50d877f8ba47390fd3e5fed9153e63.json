{"ast":null,"code":"import { solve } from './solver';\nconst queue = [];\nconst Queue = {\n  register: (n, maxIterations, model, ownership, players, sport, site, type) => {\n    queue.push(solve(n, maxIterations, model, ownership, players, sport, site, type));\n  },\n  go: () => {\n    const results = [];\n\n    while (queue.length) {\n      const top = queue.shift();\n      const response = top.go();\n\n      if (response.notFeasible || top.isDone()) {\n        top.results.forEach(result => results.push(result));\n        continue;\n      }\n\n      queue.push(top);\n    }\n\n    return results;\n  }\n};\nexport default Queue;","map":null,"metadata":{},"sourceType":"module"}