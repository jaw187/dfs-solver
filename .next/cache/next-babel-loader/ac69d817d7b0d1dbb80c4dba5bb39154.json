{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jwesto1/Code/jaw187/dfs-solver/components/navigation.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\n\nvar getState = function getState() {\n  var view = useSelector(function (state) {\n    return state.view;\n  }, shallowEqual);\n  var dispatch = useDispatch();\n\n  var setView = function setView(selected) {\n    dispatch({\n      type: 'SET_VIEW',\n      payload: selected\n    });\n  };\n\n  return {\n    view: view,\n    setView: setView\n  };\n};\n\nvar Navigation = function Navigation() {\n  var _getState = getState(),\n      view = _getState.view,\n      setView = _getState.setView;\n\n  var clear = function clear() {\n    if (window && window.localStorage) {\n      window.localStorage.clear();\n      window.location.reload(true);\n    }\n  };\n\n  var containerStyle = {\n    display: 'flex',\n    flexDirection: 'row'\n  };\n  var linkContainerStyle = {\n    padding: 16\n  };\n  var buttonStyle = {\n    padding: '8px 16px 8px 16px',\n    border: 'none',\n    outline: 'none',\n    backgroundColor: '#f6f6f6'\n  };\n\n  var selectedButtonStyle = _objectSpread({}, buttonStyle, {\n    backgroundColor: '#f60',\n    color: '#fff'\n  });\n\n  var clearButtonStyle = _objectSpread({}, buttonStyle, {\n    backgroundColor: 'red',\n    color: '#fff'\n  });\n\n  var set = function set(which) {\n    return function () {\n      return setView(which);\n    };\n  };\n\n  var navigationButton = function navigationButton(id, display) {\n    return __jsx(\"div\", {\n      style: linkContainerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      style: view === id ? selectedButtonStyle : buttonStyle,\n      onClick: set(id),\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, display));\n  };\n\n  return __jsx(\"div\", {\n    style: containerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, navigationButton('slatepicker', 'Slate'), navigationButton('importprojections', 'Projections'), navigationButton('playerpool', 'Player Pool'), navigationButton('stackbuilder', 'Stacks'), navigationButton('generator', 'Generate'), navigationButton('results', 'Lineups'), __jsx(\"div\", {\n    style: linkContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    style: clearButtonStyle,\n    onClick: clear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/jwesto1/Code/jaw187/dfs-solver/components/navigation.js"],"names":["Link","useDispatch","useSelector","shallowEqual","getState","view","state","dispatch","setView","selected","type","payload","Navigation","clear","window","localStorage","location","reload","containerStyle","display","flexDirection","linkContainerStyle","padding","buttonStyle","border","outline","backgroundColor","selectedButtonStyle","color","clearButtonStyle","set","which","navigationButton","id"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\n\nconst getState = () => {\n  const view = useSelector(state => state.view, shallowEqual);\n\n  const dispatch = useDispatch();\n  const setView = (selected) => {\n    dispatch({\n      type: 'SET_VIEW',\n      payload: selected\n    });\n  };\n\n  return { view, setView };\n};\n\nconst Navigation = () => {\n\n  const { view, setView } = getState();\n\n  const clear = () => {\n    if (window && window.localStorage) {\n      window.localStorage.clear();\n      window.location.reload(true);\n    }\n  }\n\n  const containerStyle = {\n    display: 'flex',\n    flexDirection: 'row'\n  };\n\n  const linkContainerStyle = {\n    padding: 16\n  };\n\n  const buttonStyle = {\n    padding: '8px 16px 8px 16px',\n    border: 'none',\n    outline: 'none',\n    backgroundColor: '#f6f6f6'\n  };\n\n  const selectedButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: '#f60',\n    color: '#fff'\n  }\n\n  const clearButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: 'red',\n    color: '#fff'\n  }\n\n  const set = (which) => {\n    return () => setView(which);\n  };\n\n  const navigationButton = (id, display) => (\n    <div style={linkContainerStyle}>\n      <button style={view === id ? selectedButtonStyle : buttonStyle} onClick={set(id)} selected>{display}</button>\n    </div>\n  );\n\n  return (\n    <div style={containerStyle}>\n      {navigationButton('slatepicker', 'Slate')}\n      {navigationButton('importprojections', 'Projections')}\n      {navigationButton('playerpool', 'Player Pool')}\n      {navigationButton('stackbuilder', 'Stacks')}\n      {navigationButton('generator', 'Generate')}\n      {navigationButton('results', 'Lineups')}\n      <div style={linkContainerStyle}>\n      <button style={clearButtonStyle} onClick={clear}>Clear</button>\n    </div>\n    </div>\n  )\n};\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}