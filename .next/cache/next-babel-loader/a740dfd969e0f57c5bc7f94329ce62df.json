{"ast":null,"code":"var _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nconst clone = require('lodash/cloneDeep');\n\nconst constraintList = {\n  nfl: {\n    draftkings: {\n      classic: {\n        pointz: {\n          max: 100000\n        },\n        salary: {\n          max: 50000\n        },\n        qb: {\n          min: 1,\n          max: 1\n        },\n        rb: {\n          min: 2,\n          max: 3\n        },\n        wr: {\n          min: 3,\n          max: 4\n        },\n        te: {\n          min: 1,\n          max: 2\n        },\n        dst: {\n          min: 1,\n          max: 1\n        },\n        player: {\n          equal: 9\n        }\n      }\n    }\n  },\n  golf: {\n    draftkings: {\n      classic: {\n        pointz: {\n          max: 100000\n        },\n        salary: {\n          max: 50000\n        },\n        g: {\n          equal: 6\n        }\n      }\n    }\n  }\n};\n\nclass Model {\n  constructor(players, constraints) {\n    this.optimize = 'points';\n    this.opType = 'max';\n    this.constraints = constraints;\n    this.variables = players;\n    const ints = this.ints = {};\n\n    _Object$keys(players).forEach(player => {\n      // Limit results so player only shows up once in results.\n      // More players results in more complexity\n      players[player][player] = 1;\n      constraints[player] = {\n        max: 1\n      };\n      ints[player] = 1;\n    });\n  }\n\n  removePlayer(player) {\n    const {\n      constraints,\n      ints\n    } = this;\n    delete constraints[player];\n    delete ints[player];\n  }\n\n}\n\nmodule.exports = {\n  nfl: {\n    draftkings: {\n      classic: players => new Model(players, clone(constraintList.nfl.draftkings.classic))\n    }\n  },\n  golf: {\n    draftkings: {\n      classic: players => new Model(players, clone(constraintList.golf.draftkings.classic))\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}