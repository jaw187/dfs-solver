{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jwesto1/Code/jaw187/dfs-solver/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Head from 'next/head';\nimport Header from '../components/header';\nimport ImportProjection from '../components/importprojection.js';\nimport SlatePicker from '../components/slatepicker';\nimport StackBuilder from '../components/stackbuilder';\nimport Generator from '../components/generator';\nimport Pool from '../components/pool';\nimport Navigation from '../components/navigation';\nimport Lineups from '../components/lineups';\nimport { withRedux } from '../lib/redux';\nimport fetch from 'isomorphic-unfetch';\nconst slates = {};\nconst supportedSports = ['NFL', 'GOLF'];\nconst supportedGameTypes = ['Classic'];\n\nconst getPlayers = async function (slate) {\n  if (supportedSports.includes(slate.Sport) && slate.GameType && supportedGameTypes.includes(slate.GameType.Name)) {\n    const draftGroupId = slate.DraftGroupId;\n\n    if (!slates[draftGroupId]) {\n      //Handle errrrrsssds\n      console.log(`http://api.draftkings.com/draftgroups/v1/draftgroups/${draftGroupId}/draftables?format=json`);\n      const playersRes = await fetch(`http://api.draftkings.com/draftgroups/v1/draftgroups/${draftGroupId}/draftables?format=json`, {\n        mode: 'no-cors'\n      });\n      const playerIds = [];\n      const rawPlayers = await playersRes.json();\n      const players = rawPlayers && rawPlayers.draftables && rawPlayers.draftables.filter(player => {\n        const id = player.playerId;\n\n        if (playerIds.includes(id)) {\n          return false;\n        }\n\n        playerIds.push(id);\n        return true;\n      });\n      slates[draftGroupId] = _objectSpread({}, slate, {\n        players\n      });\n    }\n  }\n};\n\nconst containerStyle = {\n  backgroundColor: '#f6f6f6',\n  height: '100%',\n  width: '100%'\n};\nconst topBarStyle = {\n  backgroundColor: '#ffffff',\n  margin: '0px 0px 16px 0px',\n  padding: 16,\n  display: 'flex',\n  flexDirection: 'row',\n  boxShadow: '1px 1px 17px -1px hsla(0, 0%, 63%, .69)'\n};\n\nconst Index = () => {\n  return __jsx(\"div\", {\n    style: containerStyle,\n    className: \"jsx-2111231969\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\",\n    className: \"jsx-2111231969\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    charSet: \"utf-8\",\n    className: \"jsx-2111231969\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Ubuntu&display=swap\",\n    rel: \"stylesheet\",\n    className: \"jsx-2111231969\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"2111231969\",\n    __self: this\n  }, \"body{background:#f6f6f6;color:#333;margin:0;padding:0;font-family:'Ubuntu';overflow-x:scroll;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qd2VzdG8xL0NvZGUvamF3MTg3L2Rmcy1zb2x2ZXIvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUV5QixBQUc4QixtQkFDUixXQUNGLFNBQ0MsVUFDVyxxQkFDSCxrQkFDcEIiLCJmaWxlIjoiL1VzZXJzL2p3ZXN0bzEvQ29kZS9qYXcxODcvZGZzLXNvbHZlci9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCc7XG5pbXBvcnQgSGVhZGVyIGZyb20gICcuLi9jb21wb25lbnRzL2hlYWRlcic7XG5pbXBvcnQgSW1wb3J0UHJvamVjdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL2ltcG9ydHByb2plY3Rpb24uanMnO1xuaW1wb3J0IFNsYXRlUGlja2VyIGZyb20gJy4uL2NvbXBvbmVudHMvc2xhdGVwaWNrZXInO1xuaW1wb3J0IFN0YWNrQnVpbGRlciBmcm9tICcuLi9jb21wb25lbnRzL3N0YWNrYnVpbGRlcic7XG5pbXBvcnQgR2VuZXJhdG9yIGZyb20gJy4uL2NvbXBvbmVudHMvZ2VuZXJhdG9yJztcbmltcG9ydCBQb29sIGZyb20gJy4uL2NvbXBvbmVudHMvcG9vbCc7XG5pbXBvcnQgTmF2aWdhdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL25hdmlnYXRpb24nO1xuaW1wb3J0IExpbmV1cHMgZnJvbSAnLi4vY29tcG9uZW50cy9saW5ldXBzJztcbmltcG9ydCB7IHdpdGhSZWR1eCB9IGZyb20gJy4uL2xpYi9yZWR1eCc7XG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcblxuY29uc3Qgc2xhdGVzID0ge307XG5cbmNvbnN0IHN1cHBvcnRlZFNwb3J0cyA9IFsnTkZMJywgJ0dPTEYnXTtcbmNvbnN0IHN1cHBvcnRlZEdhbWVUeXBlcyA9IFsnQ2xhc3NpYyddO1xuXG5jb25zdCBnZXRQbGF5ZXJzID0gYXN5bmMgZnVuY3Rpb24gKHNsYXRlKSB7XG4gIGlmIChzdXBwb3J0ZWRTcG9ydHMuaW5jbHVkZXMoc2xhdGUuU3BvcnQpICYmIHNsYXRlLkdhbWVUeXBlICYmIHN1cHBvcnRlZEdhbWVUeXBlcy5pbmNsdWRlcyhzbGF0ZS5HYW1lVHlwZS5OYW1lKSkge1xuICAgIGNvbnN0IGRyYWZ0R3JvdXBJZCA9IHNsYXRlLkRyYWZ0R3JvdXBJZDtcbiAgICBpZiAoIXNsYXRlc1tkcmFmdEdyb3VwSWRdKSB7XG4gICAgICAvL0hhbmRsZSBlcnJycnJzc3Nkc1xuICAgICAgY29uc29sZS5sb2coYGh0dHA6Ly9hcGkuZHJhZnRraW5ncy5jb20vZHJhZnRncm91cHMvdjEvZHJhZnRncm91cHMvJHtkcmFmdEdyb3VwSWR9L2RyYWZ0YWJsZXM/Zm9ybWF0PWpzb25gKVxuICAgICAgY29uc3QgcGxheWVyc1JlcyA9IGF3YWl0IGZldGNoKGBodHRwOi8vYXBpLmRyYWZ0a2luZ3MuY29tL2RyYWZ0Z3JvdXBzL3YxL2RyYWZ0Z3JvdXBzLyR7ZHJhZnRHcm91cElkfS9kcmFmdGFibGVzP2Zvcm1hdD1qc29uYCwgeyBtb2RlOiAnbm8tY29ycycgfSk7XG5cbiAgICAgIGNvbnN0IHBsYXllcklkcyA9IFtdO1xuICAgICAgY29uc3QgcmF3UGxheWVycyA9IGF3YWl0IHBsYXllcnNSZXMuanNvbigpO1xuXG4gICAgICBjb25zdCBwbGF5ZXJzID0gcmF3UGxheWVycyAmJiByYXdQbGF5ZXJzLmRyYWZ0YWJsZXMgJiYgcmF3UGxheWVycy5kcmFmdGFibGVzLmZpbHRlcigocGxheWVyKSA9PiB7XG4gICAgICAgIGNvbnN0IGlkID0gcGxheWVyLnBsYXllcklkO1xuICAgICAgICBpZiAocGxheWVySWRzLmluY2x1ZGVzKGlkKSkge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHBsYXllcklkcy5wdXNoKGlkKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9KTtcblxuICAgICAgc2xhdGVzW2RyYWZ0R3JvdXBJZF0gPSB7XG4gICAgICAgIC4uLnNsYXRlLFxuICAgICAgICBwbGF5ZXJzXG4gICAgICB9O1xuICAgIH1cbiAgfVxufTtcblxuY29uc3QgY29udGFpbmVyU3R5bGUgPSB7XG4gIGJhY2tncm91bmRDb2xvcjogJyNmNmY2ZjYnLFxuICBoZWlnaHQ6ICcxMDAlJyxcbiAgd2lkdGg6ICcxMDAlJ1xufTtcblxuY29uc3QgdG9wQmFyU3R5bGUgPSB7XG4gIGJhY2tncm91bmRDb2xvcjogJyNmZmZmZmYnLFxuICBtYXJnaW46ICcwcHggMHB4IDE2cHggMHB4JyxcbiAgcGFkZGluZzogMTYsXG4gIGRpc3BsYXk6ICdmbGV4JyxcbiAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gIGJveFNoYWRvdzogJzFweCAxcHggMTdweCAtMXB4IGhzbGEoMCwgMCUsIDYzJSwgLjY5KSdcbn1cblxuY29uc3QgSW5kZXggPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBzdHlsZT17Y29udGFpbmVyU3R5bGV9PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MVwiIC8+XG4gICAgICAgIDxtZXRhIGNoYXJTZXQ9XCJ1dGYtOFwiIC8+XG4gICAgICAgIDxsaW5rIGhyZWY9XCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9VWJ1bnR1JmRpc3BsYXk9c3dhcFwiIHJlbD1cInN0eWxlc2hlZXRcIj48L2xpbms+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICBib2R5IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjZmNmY2O1xuICAgICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAnVWJ1bnR1JztcbiAgICAgICAgICBvdmVyZmxvdy14OiBzY3JvbGw7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDxkaXYgc3R5bGU9e3RvcEJhclN0eWxlfT5cbiAgICAgICAgPEhlYWRlciAvPlxuICAgICAgICA8TmF2aWdhdGlvbiAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8U2xhdGVQaWNrZXIgLz5cbiAgICAgIDxJbXBvcnRQcm9qZWN0aW9uIC8+XG4gICAgICA8UG9vbCAvPlxuICAgICAgPFN0YWNrQnVpbGRlciAvPlxuICAgICAgPEdlbmVyYXRvciAvPlxuICAgICAgPExpbmV1cHMgLz5cbiAgICAgIDxpbWcgc3JjPVwiaHR0cHM6Ly9sb2dzLTAxLmxvZ2dseS5jb20vaW5wdXRzLzhhNDY1OTc4LWFkZDItNGI1OC05ZDU3LTAyZjg4NjliMmYxNy5naWY/c291cmNlPXBpeGVsJmRhdGE9d3V0XCIgLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuLy8gVGhpcyBpcyB0byB0cnkgYW5kIHN0b3Agc3BhbW1pbmcgREtcbmxldCBmZXRjaGVkID0gZmFsc2U7XG5sZXQgZmV0Y2hpbmcgPSBmYWxzZTtcbmNvbnN0IHJlZnJlc2hTbGF0ZXNSYXRlID0gMTAwMCAqIDYwICogNjA7XG5jb25zdCBjbGVhclNsYXRlcyA9ICgpID0+IHtcbiAgT2JqZWN0LmtleXMoc2xhdGVzKS5mb3JFYWNoKChzbGF0ZSkgPT4ge1xuICAgIGRlbGV0ZSBzbGF0ZXNbc2xhdGVdO1xuICB9KTtcblxuICBmZXRjaGVkID0gZmFsc2U7XG4gIGZldGNoaW5nID0gZmFsc2U7XG59O1xuc2V0SW50ZXJ2YWwoY2xlYXJTbGF0ZXMsIHJlZnJlc2hTbGF0ZXNSYXRlKTtcblxuSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKHsgcmVkdXhTdG9yZSB9KSA9PiB7XG4gIGlmICghZmV0Y2hlZCAmJiAhZmV0Y2hpbmcpIHtcbiAgICBmZXRjaGluZyA9IHRydWU7XG4gICAgLy8gSGFuZGxlIGVycnJycnNcbiAgICAvLyBHZXQgYWxsIHNsYXRlc1xuICAgIC8vIE5lZWRzIHRvIGJlIGltcHJvdmVkIHN1Y2ggdGhhdCBlYWNoIHJlcXVlc3QgZG9lc24ndCB0cmlnZ2VyIGFuIG91dGdvaW5nIHJlcXVlc3RcbiAgICBjb25zb2xlLmxvZygnZ2V0dGluZyBzbGF0ZXMnKVxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL3d3dy5kcmFmdGtpbmdzLmNvbS9saW5ldXAvZ2V0dXBjb21pbmdjb250ZXN0aW5mbycsIHsgbWV0aG9kOiAncG9zdCcsIG1vZGU6ICduby1jb3JzJyB9KTtcbiAgICBjb25zdCByYXdTbGF0ZXMgPSBhd2FpdCByZXMuanNvbigpO1xuXG4gICAgLy8gR2V0IHBsYXllcnMgZnJvbSBzbGF0ZVxuICAgIGF3YWl0IFByb21pc2UuYWxsKHJhd1NsYXRlcy5tYXAoZ2V0UGxheWVycykpO1xuICAgIGZldGNoZWQgPSB0cnVlO1xuICB9XG5cbiAgY29uc3QgeyBkaXNwYXRjaCB9ID0gcmVkdXhTdG9yZTtcbiAgY29uc29sZS5sb2coJ3NldHRpbmcgc2xhdGVzJykvLywgc2xhdGVzKVxuICBkaXNwYXRjaCh7XG4gICAgdHlwZTogJ1NFVF9TTEFURVMnLFxuICAgIHBheWxvYWQ6IHNsYXRlc1xuICB9KTtcblxuICByZXR1cm4ge307XG59O1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoUmVkdXgoSW5kZXgpO1xuIl19 */\\n/*@ sourceURL=/Users/jwesto1/Code/jaw187/dfs-solver/pages/index.js */\"), __jsx(\"div\", {\n    style: topBarStyle,\n    className: \"jsx-2111231969\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(Navigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), __jsx(SlatePicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(ImportProjection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(Pool, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(StackBuilder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(Generator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), __jsx(Lineups, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), __jsx(\"img\", {\n    src: \"https://logs-01.loggly.com/inputs/8a465978-add2-4b58-9d57-02f8869b2f17.gif?source=pixel&data=wut\",\n    className: \"jsx-2111231969\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }));\n}; // This is to try and stop spamming DK\n\n\nlet fetched = false;\nlet fetching = false;\nconst refreshSlatesRate = 1000 * 60 * 60;\n\nconst clearSlates = () => {\n  _Object$keys(slates).forEach(slate => {\n    delete slates[slate];\n  });\n\n  fetched = false;\n  fetching = false;\n};\n\nsetInterval(clearSlates, refreshSlatesRate);\n\nIndex.getInitialProps = async ({\n  reduxStore\n}) => {\n  if (!fetched && !fetching) {\n    fetching = true; // Handle errrrrs\n    // Get all slates\n    // Needs to be improved such that each request doesn't trigger an outgoing request\n\n    console.log('getting slates');\n    const res = await fetch('https://www.draftkings.com/lineup/getupcomingcontestinfo', {\n      method: 'post',\n      mode: 'no-cors'\n    });\n    const rawSlates = await res.json(); // Get players from slate\n\n    await _Promise.all(rawSlates.map(getPlayers));\n    fetched = true;\n  }\n\n  const {\n    dispatch\n  } = reduxStore;\n  console.log('setting slates'); //, slates)\n\n  dispatch({\n    type: 'SET_SLATES',\n    payload: slates\n  });\n  return {};\n};\n\nexport default withRedux(Index);","map":{"version":3,"sources":["/Users/jwesto1/Code/jaw187/dfs-solver/pages/index.js"],"names":["Head","Header","ImportProjection","SlatePicker","StackBuilder","Generator","Pool","Navigation","Lineups","withRedux","fetch","slates","supportedSports","supportedGameTypes","getPlayers","slate","includes","Sport","GameType","Name","draftGroupId","DraftGroupId","console","log","playersRes","mode","playerIds","rawPlayers","json","players","draftables","filter","player","id","playerId","push","containerStyle","backgroundColor","height","width","topBarStyle","margin","padding","display","flexDirection","boxShadow","Index","fetched","fetching","refreshSlatesRate","clearSlates","forEach","setInterval","getInitialProps","reduxStore","res","method","rawSlates","all","map","dispatch","type","payload"],"mappings":"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","sourcesContent":["import Head from 'next/head';\nimport Header from  '../components/header';\nimport ImportProjection from '../components/importprojection.js';\nimport SlatePicker from '../components/slatepicker';\nimport StackBuilder from '../components/stackbuilder';\nimport Generator from '../components/generator';\nimport Pool from '../components/pool';\nimport Navigation from '../components/navigation';\nimport Lineups from '../components/lineups';\nimport { withRedux } from '../lib/redux';\nimport fetch from 'isomorphic-unfetch';\n\nconst slates = {};\n\nconst supportedSports = ['NFL', 'GOLF'];\nconst supportedGameTypes = ['Classic'];\n\nconst getPlayers = async function (slate) {\n  if (supportedSports.includes(slate.Sport) && slate.GameType && supportedGameTypes.includes(slate.GameType.Name)) {\n    const draftGroupId = slate.DraftGroupId;\n    if (!slates[draftGroupId]) {\n      //Handle errrrrsssds\n      console.log(`http://api.draftkings.com/draftgroups/v1/draftgroups/${draftGroupId}/draftables?format=json`)\n      const playersRes = await fetch(`http://api.draftkings.com/draftgroups/v1/draftgroups/${draftGroupId}/draftables?format=json`, { mode: 'no-cors' });\n\n      const playerIds = [];\n      const rawPlayers = await playersRes.json();\n\n      const players = rawPlayers && rawPlayers.draftables && rawPlayers.draftables.filter((player) => {\n        const id = player.playerId;\n        if (playerIds.includes(id)) {\n          return false;\n        }\n\n        playerIds.push(id);\n        return true;\n      });\n\n      slates[draftGroupId] = {\n        ...slate,\n        players\n      };\n    }\n  }\n};\n\nconst containerStyle = {\n  backgroundColor: '#f6f6f6',\n  height: '100%',\n  width: '100%'\n};\n\nconst topBarStyle = {\n  backgroundColor: '#ffffff',\n  margin: '0px 0px 16px 0px',\n  padding: 16,\n  display: 'flex',\n  flexDirection: 'row',\n  boxShadow: '1px 1px 17px -1px hsla(0, 0%, 63%, .69)'\n}\n\nconst Index = () => {\n  return (\n    <div style={containerStyle}>\n      <Head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta charSet=\"utf-8\" />\n        <link href=\"https://fonts.googleapis.com/css?family=Ubuntu&display=swap\" rel=\"stylesheet\"></link>\n      </Head>\n      <style jsx global>{`\n        body {\n          background: #f6f6f6;\n          color: #333;\n          margin: 0;\n          padding: 0;\n          font-family: 'Ubuntu';\n          overflow-x: scroll;\n        }\n      `}</style>\n      <div style={topBarStyle}>\n        <Header />\n        <Navigation />\n      </div>\n      <SlatePicker />\n      <ImportProjection />\n      <Pool />\n      <StackBuilder />\n      <Generator />\n      <Lineups />\n      <img src=\"https://logs-01.loggly.com/inputs/8a465978-add2-4b58-9d57-02f8869b2f17.gif?source=pixel&data=wut\" />\n    </div>\n  );\n}\n\n// This is to try and stop spamming DK\nlet fetched = false;\nlet fetching = false;\nconst refreshSlatesRate = 1000 * 60 * 60;\nconst clearSlates = () => {\n  Object.keys(slates).forEach((slate) => {\n    delete slates[slate];\n  });\n\n  fetched = false;\n  fetching = false;\n};\nsetInterval(clearSlates, refreshSlatesRate);\n\nIndex.getInitialProps = async ({ reduxStore }) => {\n  if (!fetched && !fetching) {\n    fetching = true;\n    // Handle errrrrs\n    // Get all slates\n    // Needs to be improved such that each request doesn't trigger an outgoing request\n    console.log('getting slates')\n    const res = await fetch('https://www.draftkings.com/lineup/getupcomingcontestinfo', { method: 'post', mode: 'no-cors' });\n    const rawSlates = await res.json();\n\n    // Get players from slate\n    await Promise.all(rawSlates.map(getPlayers));\n    fetched = true;\n  }\n\n  const { dispatch } = reduxStore;\n  console.log('setting slates')//, slates)\n  dispatch({\n    type: 'SET_SLATES',\n    payload: slates\n  });\n\n  return {};\n};\n\nexport default withRedux(Index);\n"]},"metadata":{},"sourceType":"module"}