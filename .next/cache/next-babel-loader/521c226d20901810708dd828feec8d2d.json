{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Card from './card';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nvar getState = function getState() {\n  var slates = useSelector(function (state) {\n    return state.slates;\n  }, shallowEqual);\n  var view = useSelector(function (state) {\n    return state.view;\n  });\n  var projection = useSelector(function (state) {\n    return state.projection;\n  });\n  var selectedSlate = useSelector(function (state) {\n    return state.selectedSlate;\n  });\n  var dispatch = useDispatch();\n\n  var setSelectedSlate = function setSelectedSlate(selected) {\n    console.log('set', {\n      type: 'SET_SELECTED_SLATE',\n      payload: selected\n    });\n    dispatch({\n      type: 'SET_SELECTED_SLATE',\n      payload: selected\n    });\n    var nextView = projection ? 'playerpool' : 'importprojections';\n    dispatch({\n      type: 'SET_VIEW',\n      payload: nextView\n    });\n  };\n\n  return {\n    slates: slates,\n    setSelectedSlate: setSelectedSlate,\n    view: view,\n    selectedSlate: selectedSlate\n  };\n};\n\nvar SlatePicker = function SlatePicker() {\n  var _getState = getState(),\n      slates = _getState.slates,\n      setSelectedSlate = _getState.setSelectedSlate,\n      view = _getState.view,\n      selectedSlate = _getState.selectedSlate;\n\n  var draftGroupIds = _Object$keys(slates);\n\n  var selected = draftGroupIds && draftGroupIds[0];\n\n  var selectSlate = function selectSlate() {\n    return setSelectedSlate(selected);\n  };\n\n  var onChange = function onChange(event) {\n    setSelectedSlate(event.target.value);\n  };\n\n  var cardContainer = {\n    display: 'flex',\n    flexDirection: 'row'\n  };\n  var componentContainer = {\n    padding: 16\n  };\n  var buttonContainerStyle = {\n    paddingTop: 16\n  };\n\n  if (view !== 'slatepicker') {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    style: componentContainer\n  }, __jsx(\"h2\", {\n    style: {\n      marginTop: 0\n    }\n  }, \"Upcoming Slates\"), __jsx(\"div\", {\n    style: cardContainer\n  }, __jsx(Card, null, __jsx(\"div\", null, __jsx(FormControl, {\n    style: {\n      minWidth: 480\n    }\n  }, __jsx(InputLabel, {\n    id: \"select-label\"\n  }, \"Select a slate\"), __jsx(Select, {\n    onChange: onChange,\n    labelId: \"select-label\",\n    value: selectedSlate\n  }, draftGroupIds && draftGroupIds.map(function (draftGroupId) {\n    var slate = slates[draftGroupId];\n    var startTime = new Date(slate.StartDateEdt.substring(6, slate.StartDateEdt.length - 2) - 0);\n    var lineText = \"\".concat(slate.SportDisplayName, \" \").concat(slate.GameType.GameStyle.Name, \" on \").concat(startTime, \" \").concat(slate.ContestStartTimeSuffix || '');\n    return __jsx(MenuItem, {\n      value: draftGroupId,\n      key: draftGroupId\n    }, lineText);\n  })))), __jsx(\"div\", {\n    style: buttonContainerStyle\n  }, __jsx(Button, {\n    variant: \"contained\",\n    onClick: selectSlate,\n    color: \"primary\"\n  }, \"Select\")))));\n};\n\nexport default SlatePicker;","map":null,"metadata":{},"sourceType":"module"}