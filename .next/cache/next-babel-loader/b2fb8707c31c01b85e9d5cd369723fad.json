{"ast":null,"code":"var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs2/core-js/object/define-properties\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _defineProperty = require(\"@babel/runtime-corejs2/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nlet id = 1;\n\nconst createPlayer = (points, salary, ownership, startTime) => ({\n  points,\n  pointz: points,\n  salary,\n  ownership,\n  startTime,\n  player: 1,\n  id: ++id\n});\n\nmodule.exports = {\n  nfl: {\n    draftkings: {\n      classic: {\n        QB: (points, salary, ownership, startTime) => {\n          const positions = {\n            qb: 1,\n            rb: 0,\n            wr: 0,\n            te: 0,\n            dst: 0\n          };\n          const player = createPlayer(points, salary, ownership, startTime);\n          return _objectSpread({}, player, {}, positions);\n        },\n        RB: (points, salary, ownership, startTime) => {\n          const positions = {\n            qb: 0,\n            rb: 1,\n            wr: 0,\n            te: 0,\n            dst: 0\n          };\n          const player = createPlayer(points, salary, ownership, startTime);\n          return _objectSpread({}, player, {}, positions);\n        },\n        WR: (points, salary, ownership, startTime) => {\n          const positions = {\n            qb: 0,\n            rb: 0,\n            wr: 1,\n            te: 0,\n            dst: 0\n          };\n          const player = createPlayer(points, salary, ownership, startTime);\n          return _objectSpread({}, player, {}, positions);\n        },\n        TE: (points, salary, ownership, startTime) => {\n          const positions = {\n            qb: 0,\n            rb: 0,\n            wr: 0,\n            te: 1,\n            dst: 0\n          };\n          const player = createPlayer(points, salary, ownership, startTime);\n          return _objectSpread({}, player, {}, positions);\n        },\n        DST: (points, salary, ownership, startTime) => {\n          const positions = {\n            qb: 0,\n            rb: 0,\n            wr: 0,\n            te: 0,\n            dst: 1\n          };\n          const player = createPlayer(points, salary, ownership, startTime);\n          return _objectSpread({}, player, {}, positions);\n        }\n      }\n    }\n  },\n  golf: {\n    draftkings: {\n      classic: {\n        G: (points, salary, ownership, startTime) => {\n          const positions = {\n            g: 1\n          };\n          const player = createPlayer(points, salary, ownership, startTime);\n          return _objectSpread({}, player, {}, positions);\n        }\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}