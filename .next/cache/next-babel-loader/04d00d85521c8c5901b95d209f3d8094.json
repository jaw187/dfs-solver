{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\n\nvar getState = function getState() {\n  var view = useSelector(function (state) {\n    return state.view;\n  }, shallowEqual);\n  var dispatch = useDispatch();\n\n  var setView = function setView(selected) {\n    dispatch({\n      type: 'SET_VIEW',\n      payload: selected\n    });\n  };\n\n  return {\n    view: view,\n    setView: setView\n  };\n};\n\nvar Navigation = function Navigation() {\n  var _getState = getState(),\n      view = _getState.view,\n      setView = _getState.setView;\n\n  var clear = function clear() {\n    if (window && window.localStorage) {\n      window.localStorage.clear();\n      window.location.reload(true);\n    }\n  };\n\n  var containerStyle = {\n    display: 'flex',\n    flexDirection: 'row'\n  };\n  var linkContainerStyle = {\n    padding: 16\n  };\n  var buttonStyle = {\n    padding: '8px 16px 8px 16px',\n    border: 'none',\n    outline: 'none',\n    backgroundColor: '#f6f6f6'\n  };\n\n  var selectedButtonStyle = _objectSpread({}, buttonStyle, {\n    backgroundColor: '#f60',\n    color: '#fff'\n  });\n\n  var clearButtonStyle = _objectSpread({}, buttonStyle, {\n    backgroundColor: 'red',\n    color: '#fff'\n  });\n\n  var set = function set(which) {\n    return function () {\n      return setView(which);\n    };\n  };\n\n  var navigationButton = function navigationButton(id, display) {\n    return __jsx(\"div\", {\n      style: linkContainerStyle\n    }, __jsx(\"button\", {\n      style: view === id ? selectedButtonStyle : buttonStyle,\n      onClick: set(id),\n      selected: true\n    }, display));\n  };\n\n  return __jsx(\"div\", {\n    style: containerStyle\n  }, navigationButton('slatepicker', 'Slate'), navigationButton('importprojections', 'Projections'), navigationButton('playerpool', 'Player Pool'), navigationButton('stackbuilder', 'Stacks'), navigationButton('generator', 'Generate'), navigationButton('results', 'Lineups'), __jsx(\"div\", {\n    style: linkContainerStyle\n  }, __jsx(\"button\", {\n    style: clearButtonStyle,\n    onClick: clear\n  }, \"Clear\")));\n};\n\nexport default Navigation;","map":null,"metadata":{},"sourceType":"module"}