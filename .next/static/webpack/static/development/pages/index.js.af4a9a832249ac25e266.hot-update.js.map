{"version":3,"file":"static/webpack/static/development/pages/index.js.af4a9a832249ac25e266.hot-update.js","sources":["webpack:///./components/lineups.js"],"sourcesContent":["import Card from './card';\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport Solver from \"../solver/index\";\nimport { log } from './utils';\n\nconst { solve, Models, players } = Solver;\n\nconst getState = () => {\n  const dispatch = useDispatch();\n\n  const slates = useSelector(state => state.slates, shallowEqual);\n  const selectedSlate = useSelector(state => state.selectedSlate);\n  const projection = useSelector(state => state.projection);\n  const results = useSelector(state => state.results);\n  const view = useSelector(state => state.view);\n\n  const removeLineup = (i) => {\n    dispatch({\n      type: 'REMOVE_RESULT',\n      payload: i\n    });\n  };\n\n  return {\n    slates,\n    selectedSlate,\n    projection,\n    results,\n    view,\n    removeLineup\n  };\n};\n\nconst Lineups = () => {\n  const {\n    slates,\n    selectedSlate,\n    projection,\n    results,\n    view,\n    removeLineup\n  } = getState();\n\n  if (view !== 'results') {\n    return null;\n  }\n\n  if (results.length === 0) {\n    return (<div>Generate some lineups</div>);\n  }\n\n  const slate = slates && slates[selectedSlate];\n  const sport = slate.Sport.toLowerCase();\n  const site = 'draftkings';\n  const type = slate.GameType.Name.toLowerCase();\n\n  const formatPlayer = (lineupPlayer) => {\n    const player = slate.players.find((player) => player.draftableId == lineupPlayer.id);\n    if (!player) {\n      return lineupPlayer.id;\n    }\n\n    return `${player.position} - ${player.displayName} - $${player.salary}`;\n  };\n\n  const headers = {\n    nfl: {\n      draftkings: {\n        classic: \"QB,RB,RB,WR,WR,WR,TE,FLEX,DST\\n\"\n      }\n    },\n    golf: {\n      draftkings: {\n        classic: \"G,G,G,G,G,G\\n\"\n      }\n    }\n  };\n\n  const exporters = {\n    nfl: {\n      draftkings: {\n        classic: (result) => {\n          const { lineup: { qb, rbs, wrs, te, flex, dst } } = result;\n          return `${qb.id},${rbs[0].id},${rbs[1].id},${wrs[0].id},${wrs[1].id},${wrs[2].id},${te.id},${flex.id},${dst.id}`\n        }\n      }\n    },\n    golf: {\n      draftkings: {\n        classic: (result) => {\n          const { lineup: { g } } =  result;\n          return `${g[0].id},${g[1].id},${g[2].id},${g[3].id},${g[4].id},${g[5].id}`;\n        }\n      }\n    }\n  };\n\n  const exportToCSV = () => {\n    log('export linieups')\n    const header = headers[sport][site][type];\n    const csv = \"data:text/csv;charset=utf-8,\" + header + results.map(exporters[sport][site][type]).join('\\n');\n\n    const { encodeURI } = window;\n\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = encodeURI(csv);\n    downloadLink.download = `${selectedSlate} - Lineups.csv`;\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  const remove = (i) => {\n    log('remove lineup')\n    return () => removeLineup(i);\n  };\n\n  const containerStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  };\n\n  const lineupStyle = {\n    padding: 16,\n    margin: 8,\n    backgroundColor: \"#f3f3f3\",\n    border: '1px solid #DDD',\n    fontSize: 12\n  }\n\n  const cardContainer = {\n    display: 'flex',\n    flexDirection: 'row'\n  }\n\n  const componentContainer = {\n    padding: 16\n  };\n\n  const playerCounts = {};\n  results.forEach((result) => {\n    result.players.forEach((player) => {\n      if (!playerCounts[player]) {\n        playerCounts[player] = 0;\n      }\n\n      ++playerCounts[player];\n    });\n  });\n\n  const ownership = Object.keys(playerCounts).map((player) => {\n    return {\n      player: formatPlayer({ id: player }),\n      count: playerCounts[player],\n      percentage: ((playerCounts[player] / results.length) * 100).toFixed(0)\n    }\n  });\n\n  const ownershipPlayerStyle = {\n    whiteSpace: 'nowrap'\n  }\n\n  const lineupFormats = {\n    nfl: {\n      draftkings: {\n        classic: (result, i) => (\n          <div key={i} style={lineupStyle}>\n            <button onClick={remove(i)}>Remove</button>\n            <div>{formatPlayer(result.lineup.qb)}</div>\n            <div>{formatPlayer(result.lineup.rbs[0])}</div>\n            <div>{formatPlayer(result.lineup.rbs[1])}</div>\n            <div>{formatPlayer(result.lineup.wrs[0])}</div>\n            <div>{formatPlayer(result.lineup.wrs[1])}</div>\n            <div>{formatPlayer(result.lineup.wrs[2])}</div>\n            <div>{formatPlayer(result.lineup.te)}</div>\n            <div>{formatPlayer(result.lineup.flex)}</div>\n            <div>{formatPlayer(result.lineup.dst)}</div>\n          </div>\n        )\n      }\n    },\n    golf: {\n      draftkings: {\n        classic: (result, i) => (\n          <div key={i} style={lineupStyle}>\n            <button onClick={remove(i)}>Remove</button>\n            <div>{formatPlayer(result.lineup.g[0])}</div>\n            <div>{formatPlayer(result.lineup.g[1])}</div>\n            <div>{formatPlayer(result.lineup.g[2])}</div>\n            <div>{formatPlayer(result.lineup.g[3])}</div>\n            <div>{formatPlayer(result.lineup.g[4])}</div>\n            <div>{formatPlayer(result.lineup.g[5])}</div>\n          </div>\n        )\n      }\n    }\n  };\n\n  return (\n    <div style={componentContainer}>\n      <h2 style={{ marginTop: 0 }}>Lineups</h2>\n      <div style={cardContainer}>\n        <Card>\n          <h3 style={{ marginTop: 0 }}>Ownership</h3>\n          {\n            !!ownership.length && (\n              <div>\n                {\n                  ownership.map((data) => (\n                    <div style={ownershipPlayerStyle}>\n                      {data.player} - {data.count} - {data.percentage}%\n                    </div>\n                  ))\n                }\n              </div>\n            )\n          }\n        </Card>\n        <Card>\n          {\n            !!results.length && (\n              <div>\n                <h3 style={{marginTop: 0 }}>{results.length} lineups</h3>\n                <button onClick={exportToCSV}>Export</button>\n                <div style={containerStyle}>\n                  {\n                    results.map(lineupFormats[sport][site][type])\n                  }\n                </div>\n              </div>\n            )\n          }\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Lineups;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AANA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAJA;AADA;AAQA;AACA;AACA;AAAA;AAEA;AACA;AAJA;AADA;AATA;AACA;AAkBA;AACA;AACA;AACA;AAHA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAFA;AAKA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AADA;AADA;AAkBA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AADA;AADA;AAnBA;AAoCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;A","sourceRoot":""}